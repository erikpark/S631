knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, tidy = TRUE)
rm(list=ls())
library(alr4)
flight <- read.table("takehome2.txt", header = TRUE)
m1a <- lm(Energy ~ Type, data = flight)
#Shows significant difference between level 1 and 2, and 1 and 3
summary(m1a)
# Test of significance for beta2-beta3=0
linearHypothesis(m1a, c(0,1,-1))
plot(Effect(c("Type"),m1a))
Anova(m1a)
library(GGally)
flight$logmass <- log(flight$Mass)
ggpairs(flight)
scatterplot(Energy ~ Mass, data = flight, boxplots = FALSE, smoother = FALSE)
scatterplot(Energy ~ logmass, data = flight, boxplots = FALSE, smoother = FALSE)
m2a <- lm(Energy ~ Mass + I(Mass^2), data = flight)
#polynomial model
summary(m2a)
m2b <- lm(Energy ~ Mass, data = flight)
# non-polynomial model
summary(m2b)
m2c <- lm(Energy ~ logmass, data = flight)
summary(m2c)
m2d <- lm(Energy ~ logmass + I(logmass^2), data = flight)
summary(m2d)
anova(m2c, m2d)
mfull <- lm(Energy ~ Type*logmass, data = flight)
Anova(mfull)
plot(m2c,which = 1,add.smooth=F)
ncvTest(m2c)
library(lmtest)
# OLS confidence interval
confint(m2c, level = 0.98)
# OLS sandwich estimator corrected confidence interval
coefci(m2c, level = 0.98, vcov=hccm)
# OLS confidence interval
OLS <- confint(m2c, level = 0.98)
exp(OLS)
OLS
# OLS sandwich estimator corrected confidence interval
OLSsand <- coefci(m2c, level = 0.98, vcov=hccm)
exp(OLSsand)
# Exponentiated interval
exp(OLS)
X=model.matrix(Y~.,sniffer)
Y=sniffer$Y
n=dim(sniffer)[1]
H=X%*%solve(t(X)%*%X)%*%t(X)
RSS=c(t(Y)%*%(diag(n)-H)%*%Y)
e=(diag(n)-H)%*%Y
U=n*e^2/RSS
lambda=solve(t(X)%*%X)%*%t(X)%*%U
lin_com=X%*%lambda
e=resid(m4)
X%*%lambda
m4 <- lm(Y ~ ., sniffer)
e=resid(m4)
op=par(mfrow=c(2,2))
with(sniffer,plot(fitted(m4),e))
with(sniffer,plot(GasPres,e))
with(sniffer,plot(TankTemp,e))
with(sniffer,plot(lin_com,e))
par(op)
e=resid(m4)
op=par(mfrow=c(2,2))
with(sniffer,plot(fitted(m4),e))
with(sniffer,plot(GasPres,e))
with(sniffer,plot(TankTemp,e))
with(sniffer,plot(lin_com,e))
par(op)
m4 <- lm(Y ~ ., sniffer)
X=model.matrix(Y~.,sniffer)
Y=sniffer$Y
n=dim(sniffer)[1]
H=X%*%solve(t(X)%*%X)%*%t(X)
RSS=c(t(Y)%*%(diag(n)-H)%*%Y)
e=(diag(n)-H)%*%Y
U=n*e^2/RSS
Z=fitted(m4)
m.aux=lm(U~Z)
SSreg=sum((fitted(m.aux)-mean(U))^2)
S=SSreg/2
p_value=1-pchisq(S,df=1)
c("S"=S,"P-value"=p_value)
ncvTest(m4)
sniffer
X=model.matrix(Energy ~ logmass, data = flight)
Y=flight$Energy
dim(sniffer)
dim(flight)
n=dim(flight)[1]
H=X%*%solve(t(X)%*%X)%*%t(X)
RSS=c(t(Y)%*%(diag(n)-H)%*%Y)
e=(diag(n)-H)%*%Y
U=n*e^2/RSS
fitted(m2c)
Z=fitted(m2c)
m.aux=lm(U~Z)
SSreg=sum((fitted(m.aux)-mean(U))^2)
S=SSreg/2
p_value=1-pchisq(S,df=1)
c("S"=S,"P-value"=p_value)
ncvTest(m2c)
Z=cbind(1,sniffer$TankTemp,sniffer$GasTemp)
H.aux=Z%*%solve(t(Z)%*%Z)%*%t(Z)
J=rep(1,n)%*%t(rep(1,n))
S=c(t(U)%*%(H.aux-1/n*J)%*%U)/2
c("S"=S,"P-value"=1-pchisq(S,df=dim(Z)[2]-1))
ncvTest(m4, ~ TankTemp + GasTemp)
m4 <- lm(Y ~ ., sniffer)
X=model.matrix(Y~.,sniffer)
Y=sniffer$Y
n=dim(sniffer)[1]
H=X%*%solve(t(X)%*%X)%*%t(X)
RSS=c(t(Y)%*%(diag(n)-H)%*%Y)
e=(diag(n)-H)%*%Y
U=n*e^2/RSS
Z=fitted(m4)
m.aux=lm(U~Z)
SSreg=sum((fitted(m.aux)-mean(U))^2)
S=SSreg/2
p_value=1-pchisq(S,df=1)
c("S"=S,"P-value"=p_value)
ncvTest(m4)
Z=cbind(1,sniffer$TankTemp,sniffer$GasTemp)
H.aux=Z%*%solve(t(Z)%*%Z)%*%t(Z)
J=rep(1,n)%*%t(rep(1,n))
S=c(t(U)%*%(H.aux-1/n*J)%*%U)/2
c("S"=S,"P-value"=1-pchisq(S,df=dim(Z)[2]-1))
ncvTest(m4, ~ TankTemp + GasTemp)
Z1=with(sniffer,ncvTest(m4, ~ GasPres))
Z2=with(sniffer,ncvTest(m4, ~ TankTemp))
Z3=with(sniffer,ncvTest(m4, ~ GasPres+TankTemp))
Z4=with(sniffer,ncvTest(m4, ~ GasPres+TankTemp+GasTemp+TankPres))
Z5=with(sniffer,ncvTest(m4))
table1=rbind(with(Z1,c(Df,ChiSquare,p)),with(Z2,c(Df,ChiSquare,p)),with(Z3,c(Df,ChiSquare,p)),with(Z4,c(Df,ChiSquare,p)),with(Z5,c(Df,ChiSquare,p)))
row.names(table1)=c("GasPres","TankTemp","TankTemp,GasPres","TankTemp,GasTemp,TankPres,GasPres","Fitted values")
colnames(table1)=c("df","Test statistic","p-Value")
table1
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, tidy = TRUE)
rm(list=ls())
library(alr4)
flight <- read.table("takehome2.txt", header = TRUE)
m1a <- lm(Energy ~ Type, data = flight)
#Shows significant difference between level 1 and 2, and 1 and 3
summary(m1a)
# Test of significance for beta2-beta3=0
linearHypothesis(m1a, c(0,1,-1))
plot(Effect(c("Type"),m1a))
Anova(m1a)
library(GGally)
flight$logmass <- log(flight$Mass)
ggpairs(flight)
scatterplot(Energy ~ Mass, data = flight, boxplots = FALSE, smoother = FALSE)
scatterplot(Energy ~ logmass, data = flight, boxplots = FALSE, smoother = FALSE)
m2a <- lm(Energy ~ Mass + I(Mass^2), data = flight)
#polynomial model
summary(m2a)
m2b <- lm(Energy ~ Mass, data = flight)
# non-polynomial model
summary(m2b)
m2c <- lm(Energy ~ logmass, data = flight)
summary(m2c)
m2d <- lm(Energy ~ logmass + I(logmass^2), data = flight)
summary(m2d)
anova(m2c, m2d)
mfull <- lm(Energy ~ Type*logmass, data = flight)
Anova(mfull)
plot(m2c,which = 1,add.smooth=F)
X=model.matrix(Energy ~ logmass, data = flight)
Y=flight$Energy
n=dim(flight)[1]
H=X%*%solve(t(X)%*%X)%*%t(X)
RSS=c(t(Y)%*%(diag(n)-H)%*%Y)
e=(diag(n)-H)%*%Y
U=n*e^2/RSS
Z=fitted(m2c)
m.aux=lm(U~Z)
SSreg=sum((fitted(m.aux)-mean(U))^2)
S=SSreg/2
p_value=1-pchisq(S,df=1)
c("S"=S,"P-value"=p_value)
ncvTest(m2c)
library(lmtest)
# OLS confidence interval
OLS <- confint(m2c, level = 0.98)
# Exponentiated interval
exp(OLS)
# OLS sandwich estimator corrected confidence interval
OLSsand <- coefci(m2c, level = 0.98, vcov=hccm)
# Exponentiated sandwich corrected interval
exp(OLSsand)
X=model.matrix(Energy ~ logmass, data = flight)
Y=flight$Energy
n=dim(flight)[1]
H=X%*%solve(t(X)%*%X)%*%t(X)
RSS=c(t(Y)%*%(diag(n)-H)%*%Y)
e=(diag(n)-H)%*%Y
U=n*e^2/RSS
Z=fitted(m2c)
m.aux=lm(U~Z)
SSreg=sum((fitted(m.aux)-mean(U))^2)
S=SSreg/2
p_value=1-pchisq(S,df=1)
c("S"=S,"P-value"=p_value)
ncvTest(m2c)
?ncvTest
?leveneTest
leveneTest(m2c)
leveneTest(m2c, flight)
View(flight)
?ncvTest
leveneTest(m1a)
?ols_f_test
??ols_f_test
?olsrr
?var.test
install.packages("olsrr")
library(olsrr)
ols_f_test(m3c)
ols_f_test(m2c)
ncvTest(m2c)
ols_f_test(m2c)
?ols_f_test
powerTransform(Mass ~ 1, flight)
summary(powerTransform(Mass ~ 1, flight))
summary(powerTransform(Mass ~ 1, flight))
scatterplot(Energy ~ sqrt(Mass), data = flight, boxplots = FALSE, smoother = FALSE)
scatterplot(Energy ~ logmass, data = flight, boxplots = FALSE, smoother = FALSE)
summary(flight)
scatterplot(Energy ~ Mass, data = flight, boxplots = FALSE, smoother = FALSE)
library(ggpubr)
library(gridExtra)
library(tidyr)
library(alr4)
library(GGally)
library(lmtest)
f2.orig <- read.csv("Microbiome swap F2's - Sheet1.csv")
f2.fixed <- separate(data = f2.orig, col = Mother.Individual, into = c("mother", "individual"), sep = "\\.")
f2.fixed <- f2.fixed[-(35:40),]
f2.fixed$Maternal.size <- as.factor(f2.fixed$Maternal.size)
mmid.size <- lm(Adult.size ~ Treatment.ID + Sex + BB.weight:Maternal.size, data = f2.fixed)
summary(mmid.size)
f2.orig <- read.csv("Microbiome swap F2's - Sheet1.csv")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, tidy = TRUE)
rm(list=ls())
library(alr4)
angell <- read.table("Angell.txt")
summary(angell)
scatterplotMatrix(angell)
# heterogeneity probably needs a transformation, others look okay.
angell$loghet <- log(angell$heterogeneity)
scatterplotMatrix(angell, smoother = FALSE)
# Yeah, after transformation, relationship with moralIntegration, and distribution looks better.
bc1 = powerTransform(cbind(heterogeneity, mobility) ~ 1, angell)
summary(bc1)
# So from this, heterogeneity seems to need a log transformation, mobility is fine.
bc2 = powerTransform(cbind(heterogeneity, mobility) ~ region, angell)
summary(bc2)
# But when we consider the factor, region, that will likely be included in the model, it seems both the continuous regressors need to be log transformed.
m1 <- lm(moralIntegration ~ log(heterogeneity) + mobility + region, data = angell)
summary(m1)
Anova(m1)
# Here, looks like only log(het) is needed, but lets try dropping mobility, as it has the larger p-value when the other regressors are considered.
m1a <- lm(moralIntegration ~ log(heterogeneity) + log(mobility) + region, data = angell)
Anova(m1a)
m2 <- lm(moralIntegration ~ log(heterogeneity) + region, data = angell)
anova(m2,m1)
# Here we see that we can't reject the null that the reduced model without mobility is good.
anova(m2,m1a)
# log transformed mobility improves the model, but we still can't reject the null that the model without mobility is good enough.
m2b <- lm(moralIntegration ~ log(heterogeneity) + mobility , data = angell)
anova(m2b,m1)
# But, this test also tells us that we can't reject the null that the model without region is good.
Anova(m2)
Anova(m2b)
summary(m2)
summary(m2b)
# Let's try adding an interaction between mobility and region maybe, first let's look at R^2 values of models with only those two though, to try and determine if they explain similar data.
m3a <- lm(moralIntegration ~ region, data = angell)
m3b <- lm(moralIntegration ~ log(mobility), data = angell)
summary(m3a)
summary(m3b)
# region explains more variation by itself alone, may not need mobility.
m3c <- lm(moralIntegration ~ mobility + region, data = angell)
summary(m3c)
# lots of shared explanatory potential, R^2 barely increases when both present.
m3d <-lm(moralIntegration ~ mobility*region, data = angell)
summary(m3d)
Anova(m3d)
# interaction not significant.
m3e <- m3c <- lm(moralIntegration ~ log(mobility) + region, data = angell)
Anova(m3e)
Anova(m3c)
# mobility not needed, even when log transformed.
# So, seems like we might need both log(heterogeneity) and region, but not mobility.
m4a <- lm(moralIntegration ~ log(heterogeneity)*region, data = angell)
Anova(m4a)
anova(m2,m4a)
# interaction between these two final regressors not significant though.
# So, final model for now is m2.
m2poly <- lm(moralIntegration ~ log(heterogeneity) + region + I(log(heterogeneity)^2), data = angell)
summary(m2poly)
# No need for the polynomial term
# Now, should we transform the predictor after we have this final model?
summary(powerTransform(m2))
inverseResponsePlot(m2)
# So, won't need to transform the response based on this.
# Should we include polynomials?
rp2 <- residualPlots(m2)
rp2
# So, no polynomial seems to be needed.
# Finally, let's look at the variance.
ncvTest(m2)
# High p-value, can't reject null that the variance of this function is constant.
scatterplot(moralIntegration ~ log(heterogeneity) | region, data = angell, smooth = FALSE, boxplots = FALSE)
summary(m2)
residualPlots(m2)
# Again, the residuals look fine. Look like null-plots with no curvature and/or fan-shape.
scatterplot(moralIntegration ~ log(heterogeneity) | region, data = angell, smooth = FALSE, boxplots = FALSE)
summary(m2)
residualPlots(m2)
influenceIndexPlot(m2, id.n = 4)
#Directly testing for outliers
outlierTest(m2)
m2out <- update(m2, subset=-c(41,29,12,1))
summary(m2)
summary(m2out)
anova(m2out,m2)
summary(m2poly)
